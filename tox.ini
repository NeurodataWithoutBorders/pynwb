# Tox (https://tox.readthedocs.io/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
envlist = py35, py36, py37

[testenv]
usedevelop = True
setenv = PYTHONDONTWRITEBYTECODE = 1
install_command =
    pip install -U {opts} {packages}

deps =
    -rrequirements-dev.txt
    -rrequirements.txt

commands =
    pip check # check for conflicting packages
    python test.py -v

# Env to create coverage report locally
[testenv:localcoverage]
basepython = python3.6
commands =
    coverage run test.py --pynwb
    coverage html -d tests/coverage/htmlcov

# Test with python 3.6, pinned dev reqs, and minimum run requirements
[testenv:py36-min-req]
basepython = python3.6
deps =
    -rrequirements-dev.txt
    -rrequirements-min.txt
commands = {[testenv]commands}

# Envs that builds wheels and source distribution
[testenv:build]
commands =
    python setup.py sdist
    python setup.py bdist_wheel

[testenv:build-py35]
basepython = python3.5
commands = {[testenv:build]commands}

[testenv:build-py36]
basepython = python3.6
commands = {[testenv:build]commands}

[testenv:build-py37]
basepython = python3.7
commands = {[testenv:build]commands}

[testenv:build-py36-min-req]
basepython = python3.6
deps =
    -rrequirements-dev.txt
    -rrequirements-min.txt
commands = {[testenv:build]commands}

# Envs that will only be executed on CI that does coverage reporting
[testenv:coverage]
passenv = CODECOV_TOKEN
basepython = python3.7
commands =
    coverage run test.py --pynwb
    coverage report -m
    codecov -X fix

# Envs that will test installation from a wheel
[testenv:wheelinstall-py35]
deps = null
commands = python -c "import pynwb"

[testenv:wheelinstall-py36]
deps = null
commands = python -c "import pynwb"

[testenv:wheelinstall-py37]
deps = null
commands = python -c "import pynwb"

[testenv:wheelinstall-py36-min-req]
deps = null
commands = python -c "import pynwb"

# Envs that will execute gallery tests
[testenv:gallery]
install_command =
    pip install -U {opts} {packages}

deps =
    -rrequirements-dev.txt
    -rrequirements.txt
    -rrequirements-doc.txt

commands =
    python test.py --example

[testenv:gallery-py36]
basepython = python3.6
deps = {[testenv:gallery]deps}
commands = {[testenv:gallery]commands}

[testenv:gallery-py37]
basepython = python3.7
deps = {[testenv:gallery]deps}
commands = {[testenv:gallery]commands}

[testenv:gallery-py36-min-req]
basepython = python3.6
deps =
    -rrequirements-dev.txt
    -rrequirements-min.txt
    -rrequirements-doc.txt
commands = {[testenv:gallery]commands}

[testenv:validation-py37]
basepython = python3.7
install_command =
    pip install -U {opts} {packages}
deps =
    -rrequirements-dev.txt
    -rrequirements.txt
    -rrequirements-doc.txt
commands =
    python test.py --validation
