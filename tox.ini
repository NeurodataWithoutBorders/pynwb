# Tox (https://tox.readthedocs.io/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
envlist = py38, py39, py310, py311, py312
requires = pip >= 22.0

[testenv]
download = True
setenv =
  PYTHONDONTWRITEBYTECODE = 1
  VIRTUALENV_PIP = 23.3.1
install_command =
    python -m pip install -U {opts} {packages}

deps =
    -rrequirements-dev.txt
    -rrequirements.txt
commands =
    python -m pip check  # Check for conflicting packages
    python -m pip list
    python test.py -v

# Test with python 3.12; pinned dev reqs; upgraded run reqs
[testenv:py312-upgraded]
basepython = python3.12
install_command =
    python -m pip install -U {opts} {packages}
deps =
    -rrequirements-dev.txt
commands = {[testenv]commands}

# Test with python 3.12; pinned dev reqs; upgraded, pre-release run reqs
[testenv:py312-prerelease]
basepython = python3.12
install_command =
    python -m pip install -U --pre {opts} {packages}
deps =
    -rrequirements-dev.txt
commands = {[testenv]commands}

# Test with python 3.8; pinned dev reqs; minimum run reqs
[testenv:py38-minimum]
basepython = python3.8
deps =
    -rrequirements-dev.txt
    -rrequirements-min.txt
commands = {[testenv]commands}

# Envs that builds wheels and source distribution
[testenv:build]
commands =
    python -m pip install --upgrade build
    python -m build

[testenv:build-py38]
basepython = python3.8
commands = {[testenv:build]commands}

[testenv:build-py39]
basepython = python3.9
commands = {[testenv:build]commands}

[testenv:build-py310]
basepython = python3.10
commands = {[testenv:build]commands}

[testenv:build-py311]
basepython = python3.11
commands = {[testenv:build]commands}

[testenv:build-py312]
basepython = python3.12
commands = {[testenv:build]commands}

[testenv:build-py312-upgraded]
basepython = python3.12
install_command =
    python -m pip install -U {opts} {packages}
deps =
    -rrequirements-dev.txt
commands = {[testenv:build]commands}

[testenv:build-py312-prerelease]
basepython = python3.12
install_command =
    python -m pip install -U --pre {opts} {packages}
deps =
    -rrequirements-dev.txt
commands = {[testenv:build]commands}

[testenv:build-py38-minimum]
basepython = python3.8
deps =
    -rrequirements-dev.txt
    -rrequirements-min.txt
commands = {[testenv:build]commands}

# Envs that will test installation from a wheel
[testenv:wheelinstall]
deps = null
commands = python -c "import pynwb"

# Envs that will execute gallery tests that do not require ROS3
# Test with pinned dev, doc, and run reqs
[testenv:gallery]
install_command =
    python -m pip install -U {opts} {packages}
deps =
    -rrequirements.txt
commands =
    python -m pip install .
    python -m pip install -r requirements-doc.txt  # NOTE: allensdk (requirements-doc.txt) requires pynwb
    python -m pip check
    python -m pip list
    python test.py --example

[testenv:gallery-py38]
basepython = python3.8
deps = {[testenv:gallery]deps}
commands = {[testenv:gallery]commands}

[testenv:gallery-py39]
basepython = python3.9
deps = {[testenv:gallery]deps}
commands = {[testenv:gallery]commands}

[testenv:gallery-py310]
basepython = python3.10
deps = {[testenv:gallery]deps}
commands = {[testenv:gallery]commands}

[testenv:gallery-py311]
basepython = python3.11
deps = {[testenv:gallery]deps}
commands = {[testenv:gallery]commands}

# Test with python 3.12; pinned dev, and doc reqs; upgraded run reqs
[testenv:gallery-py312-upgraded]
basepython = python3.12
deps =
    -rrequirements-dev.txt
commands =
    python -m pip install -U .
    python -m pip install -r requirements-doc.txt  # NOTE: allensdk (requirements-doc.txt) requires pynwb
    python -m pip check
    python -m pip list
    python test.py --example

# Test with python 3.12; pinned dev, doc, and optional reqs; pre-release run reqs
[testenv:gallery-py312-prerelease]
basepython = python3.12
deps =
    -rrequirements-dev.txt
commands =
    python -m pip install -U --pre .
    python -m pip install -r requirements-doc.txt  # NOTE: allensdk (requirements-doc.txt) requires pynwb
    python -m pip check
    python -m pip list
    python test.py --example

# Test with python 3.8; pinned dev and doc reqs; minimum run reqs
[testenv:gallery-py38-minimum]
basepython = python3.8
deps =
    -rrequirements-min.txt
commands = {[testenv:gallery]commands}
