version: 2

references:

  run-style-check: &run-style-check
    name: Run Style Checks
    command: |
      . ../venv/bin/activate
      pip install flake8
      flake8 src/pynwb
      flake8 tests
      flake8 --ignore E402,E501,W504 docs/gallery

  initialize-venv: &initialize-venv
    name: Initialize Virtual Environment
    command: |
      python -m virtualenv ../venv || python -m venv ../venv
      . ../venv/bin/activate

  ci-steps: &ci-steps
    steps:
      - checkout
      - run:
          <<: *initialize-venv
      - run:
          name: Run the tests
          command: |
            . ../venv/bin/activate
            pip install tox
            tox -e $TEST_TOX_ENV
          # Install is expected to be quick. Increase timeout in case there are some network issues.
          # While pip installing tox does not output by default. Circle thinks task is dead after 10 min.
          no_output_timeout: 30m
      - run:
          name: Run coverage and submit to codecov-io
          command: |
            . ../venv/bin/activate
            tox -e $COVERAGE_TOX_ENV
      - run:
          name: Build wheel and source distribution
          command: |
            . ../venv/bin/activate
            tox -e $BUILD_TOX_ENV
      - run:
          name: Test installation from a wheel
          command: |
            . ../venv/bin/activate
            tox -e $TEST_WHEELINSTALL_ENV --recreate --installpkg dist/*-none-any.whl
      - run:
          name: Remove distributions if UPLOAD_WHEELS != true
          command: |
            if [[ "${UPLOAD_WHEELS}" != "true" ]]; then
              echo "Discarding distributions"
              ls -1 dist
              rm -rf dist/*
            else
              echo "Keeping distributions for upload"
              ls -1 dist
            fi
      - persist_to_workspace:
          root: ./
          paths:
            - dist

  conda-steps: &conda-steps
    steps:
      - checkout
      - run:
          name: Configure conda
          command: |
            conda config --set always_yes yes --set changeps1 no
            conda config --add channels conda-forge
            conda install virtualenv
            conda install tox
      - run:
          name: Run the tests
          command: |
            tox -e $TEST_TOX_ENV
      - run:
          name: Build wheel and source distribution
          command: |
            tox -e $BUILD_TOX_ENV
      - run:
          name: Test installation from a wheel
          command: |
            tox -e $TEST_WHEELINSTALL_ENV --recreate --installpkg dist/*-none-any.whl

  gallery-steps: &gallery-steps
    steps:
      - checkout
      - restore_cache:
          keys:
            - ophys-data-cache
      - run:
          <<: *initialize-venv
      - run:
          name: Run the gallery tests
          command: |
            . ../venv/bin/activate
            pip install tox
            tox -e $TEST_TOX_ENV
          no_output_timeout: 30m
      - save_cache:
          key: ophys-data-cache
          paths: ophys_experiment_data

  no_filters: &no_filters
    filters:
      tags:
        only: /.*/

jobs:
  flake8:
    docker:
      - image: circleci/python:3.6.3-jessie
    steps:
      - checkout
      - run:
          <<: *initialize-venv
      - run:
          <<: *run-style-check
  python27:
    docker:
      - image: circleci/python:2.7.14-jessie
    environment:
     - TEST_TOX_ENV: "py27"
     - COVERAGE_TOX_ENV: "coverage-py27"
     - BUILD_TOX_ENV: "build-py27"
     - TEST_WHEELINSTALL_ENV: "wheelinstall-py27"
    <<: *ci-steps

  python35:
    docker:
      - image: circleci/python:3.5.4-jessie
    environment:
     - TEST_TOX_ENV: "py35"
     - COVERAGE_TOX_ENV: "coverage-py35"
     - BUILD_TOX_ENV: "build-py35"
     - TEST_WHEELINSTALL_ENV: "wheelinstall-py35"
    <<: *ci-steps

  python36:
    docker:
      - image: circleci/python:3.6.3-jessie
    environment:
     - TEST_TOX_ENV: "py36"
     - COVERAGE_TOX_ENV: "coverage-py36"
     - BUILD_TOX_ENV: "build-py36"
     - TEST_WHEELINSTALL_ENV: "wheelinstall-py36"
     - UPLOAD_WHEELS: "true"
    <<: *ci-steps

  miniconda27:
    docker:
      - image: continuumio/miniconda:4.3.14
    environment:
      - TEST_TOX_ENV: "py27"
      - BUILD_TOX_ENV: "build-py27"
      - TEST_WHEELINSTALL_ENV: "wheelinstall-py27"
    <<: *conda-steps

  miniconda35:
    docker:
      - image: continuumio/miniconda3:4.1.11
    environment:
      - TEST_TOX_ENV: "py35"
      - BUILD_TOX_ENV: "build-py35"
      - TEST_WHEELINSTALL_ENV: "wheelinstall-py35"
    <<: *conda-steps

  miniconda36:
    docker:
      - image: continuumio/miniconda3:4.3.14
    environment:
      - TEST_TOX_ENV: "py36"
      - BUILD_TOX_ENV: "build-py36"
      - TEST_WHEELINSTALL_ENV: "wheelinstall-py36"
    <<: *conda-steps

  gallery27:
    docker:
      - image: circleci/python:2.7.14-jessie
    environment:
     - TEST_TOX_ENV: "gallery-py27"
    <<: *gallery-steps

  gallery35:
    docker:
      - image: circleci/python:3.5.4-jessie
    environment:
     - TEST_TOX_ENV: "gallery-py35"
    <<: *gallery-steps

  gallery36:
    docker:
      - image: circleci/python:3.6.3-jessie
    environment:
     - TEST_TOX_ENV: "gallery-py36"
    <<: *gallery-steps

  deploy-dev:
    docker:
      - image: circleci/python:3.7.0-stretch
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Publish wheel and source distribution as a GitHub pre-release
          command: |
            python -m venv ../venv
            . ../venv/bin/activate
            pip install -U scikit-ci-addons
            echo "CIRCLE_SHA1 [$CIRCLE_SHA1]"
            ci_addons publish_github_release NeurodataWithoutBorders/pynwb  \
                --prerelease-packages "dist/*" \
                --prerelease-sha $CIRCLE_SHA1 \
                --prerelease-packages-clear-pattern "*" \
                --prerelease-packages-keep-pattern "*dev<COMMIT_DISTANCE>*" \
                --re-upload \
                --exit-success-if-missing-token

  deploy-release:
    docker:
      - image: circleci/python:3.7.0-stretch
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Deploy release
          command: |
            echo "Deploy release"
            python -m venv ../venv
            . ../venv/bin/activate
            pip install twine
            ls dist
            twine upload -u $PYPI_USER -p $PYPI_PASSWORD --skip-existing dist/*
      - run:
          name: Publish wheel and source distribution as a GitHub release
          command: |
            python -m venv ../venv
            . ../venv/bin/activate
            pip install githubrelease
            githubrelease release $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME \
              create $CIRCLE_TAG --name $CIRCLE_TAG \
              --publish ./dist/*

workflows:
  version: 2
  test-package-publish:
    jobs:
      - flake8:
          <<: *no_filters
      - python27:
          <<: *no_filters
      - python35:
          <<: *no_filters
      - python36:
          <<: *no_filters
      - miniconda27:
          <<: *no_filters
      - miniconda35:
          <<: *no_filters
      - miniconda36:
          <<: *no_filters
      - gallery27:
          <<: *no_filters
      - gallery35:
          <<: *no_filters
      - gallery36:
          <<: *no_filters
      - deploy-dev:
          requires:
            - flake8
            - python27
            - python35
            - python36
            - miniconda27
            - miniconda35
            - miniconda36
            - gallery27
            - gallery35
            - gallery36
          filters:
            branches:
              only: dev
      - deploy-release:
          requires:
            - flake8
            - python27
            - python35
            - python36
            - miniconda27
            - miniconda35
            - miniconda36
            - gallery27
            - gallery35
            - gallery36
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(\.post[0-9]+)?$/
            branches:
              ignore: /.*/
