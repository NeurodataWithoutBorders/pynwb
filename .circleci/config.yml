version: 2.1

references:

  run-style-check: &run-style-check
    name: Run Style Checks
    command: |
      . ../venv/bin/activate
      pip install flake8
      flake8 src/pynwb
      flake8 tests
      flake8 --ignore E402,E501,W504 docs/gallery

  initialize-venv: &initialize-venv
    name: Initialize Virtual Environment
    command: |
      python -m virtualenv ../venv || python -m venv ../venv
      . ../venv/bin/activate

  py39: &py39
    docker:
    - image: circleci/python:3.9.2-buster
      auth:
        username: hdmf
        password: $DOCKERHUB_PASSWORD

  py38: &py38
    docker:
    - image: circleci/python:3.8.8-buster
      auth:
        username: hdmf
        password: $DOCKERHUB_PASSWORD

  py37: &py37
    docker:
    - image: circleci/python:3.7.10-buster
      auth:
        username: hdmf
        password: $DOCKERHUB_PASSWORD

  conda-image: &conda-image
    docker:
    - image: continuumio/miniconda3:4.9.2
      auth:
        username: hdmf
        password: $DOCKERHUB_PASSWORD

  ci-steps: &ci-steps
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - run:
          <<: *initialize-venv
      - run:
          name: Run the tests
          command: |
            . ../venv/bin/activate
            pip install tox
            tox -e $TEST_TOX_ENV
          # Install is expected to be quick. Increase timeout in case there are some network issues.
          # While pip installing tox does not output by default. Circle thinks task is dead after 10 min.
          no_output_timeout: 30m
      - run:
          name: Build wheel and source distribution
          command: |
            . ../venv/bin/activate
            tox -e $BUILD_TOX_ENV
      - run:
          name: Test installation from a wheel
          command: |
            . ../venv/bin/activate
            tox -e $TEST_WHEELINSTALL_ENV --recreate --installpkg dist/*-none-any.whl
      - run:
          name: Remove distributions if UPLOAD_WHEELS != true
          command: |
            if [[ "${UPLOAD_WHEELS}" != "true" ]]; then
              echo "Discarding distributions"
              ls -1 dist
              rm -rf dist/*
            else
              echo "Keeping distributions for upload"
              ls -1 dist
            fi
      - persist_to_workspace:
          root: ./
          paths:
            - dist

  conda-steps: &conda-steps
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - run:
          name: Configure conda
          command: |
            conda config --set always_yes yes --set changeps1 no
            conda config --add channels conda-forge
            conda install python=$CONDA_PYTHON_VER
            conda install virtualenv
            conda install tox
      - run:
          name: Run the tests
          command: |
            tox -e $TEST_TOX_ENV
      - run:
          name: Build wheel and source distribution
          command: |
            tox -e $BUILD_TOX_ENV
      - run:
          name: Test installation from a wheel
          command: |
            tox -e $TEST_WHEELINSTALL_ENV --recreate --installpkg dist/*-none-any.whl

  gallery-steps: &gallery-steps
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - restore_cache:
          keys:
            - ophys-data-cache
      - run:
          <<: *initialize-venv
      - run:
          name: Run the gallery tests
          command: |
            . ../venv/bin/activate
            pip install tox
            tox -e $TEST_TOX_ENV
          no_output_timeout: 30m
      - save_cache:
          key: ophys-data-cache
          paths: ophys_experiment_data

  no_filters: &no_filters
    filters:
      tags:
        ignore:
          # exclude tags created by "ci_addons publish_github_release"
          - /^latest$/
          - /^latest-tmp$/
    context:
      - docker-hub-creds

jobs:
  flake8:
    <<: *py38
    steps:
      - checkout
      - run:
          <<: *initialize-venv
      - run:
          <<: *run-style-check

  python37:
    <<: *py37
    environment:
      - TEST_TOX_ENV: "py37"
      - BUILD_TOX_ENV: "build-py37"
      - TEST_WHEELINSTALL_ENV: "wheelinstall"
    <<: *ci-steps

  python38:
    <<: *py38
    environment:
      - TEST_TOX_ENV: "py38"
      - BUILD_TOX_ENV: "build-py38"
      - TEST_WHEELINSTALL_ENV: "wheelinstall"
    <<: *ci-steps

  python39:
    <<: *py39
    environment:
      - TEST_TOX_ENV: "py39"
      - BUILD_TOX_ENV: "build-py39"
      - TEST_WHEELINSTALL_ENV: "wheelinstall"
      - UPLOAD_WHEELS: "true"  # upload distributions from only this job to pypi
    <<: *ci-steps

  python39-upgrade-dev:
    <<: *py39
    environment:
      - TEST_TOX_ENV: "py39-upgrade-dev"
      - BUILD_TOX_ENV: "build-py39-upgrade-dev"
      - TEST_WHEELINSTALL_ENV: "wheelinstall"
    <<: *ci-steps

  python39-upgrade-dev-pre:
    <<: *py39
    environment:
      - TEST_TOX_ENV: "py39-upgrade-dev-pre"
      - BUILD_TOX_ENV: "build-py39-upgrade-dev-pre"
      - TEST_WHEELINSTALL_ENV: "wheelinstall"
    <<: *ci-steps

  python37-min-req:
    <<: *py37
    environment:
      - TEST_TOX_ENV: "py37-min-req"
      - BUILD_TOX_ENV: "build-py37-min-req"
      - TEST_WHEELINSTALL_ENV: "wheelinstall"
    <<: *ci-steps

  miniconda37:
    <<: *conda-image
    environment:
      - CONDA_PYTHON_VER: "3.7"
      - TEST_TOX_ENV: "py37"
      - BUILD_TOX_ENV: "build-py37"
      - TEST_WHEELINSTALL_ENV: "wheelinstall"
    <<: *conda-steps

  miniconda38:
    <<: *conda-image
    environment:
      - CONDA_PYTHON_VER: "3.8"
      - TEST_TOX_ENV: "py38"
      - BUILD_TOX_ENV: "build-py38"
      - TEST_WHEELINSTALL_ENV: "wheelinstall"
    <<: *conda-steps

  miniconda39:
    <<: *conda-image
    environment:
      - CONDA_PYTHON_VER: "3.9"
      - TEST_TOX_ENV: "py39"
      - BUILD_TOX_ENV: "build-py39"
      - TEST_WHEELINSTALL_ENV: "wheelinstall"
    <<: *conda-steps

  miniconda39-ros3:   # tox and conda do not play nicely so do not use tox here
    <<: *conda-image
    environment:
      - CONDA_PYTHON_VER: "3.9"
      - TEST_TOX_ENV: "ros3-py39"
      - BUILD_TOX_ENV: "build-py39"
      - TEST_WHEELINSTALL_ENV: "wheelinstall"
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - run:
          name: Configure conda
          command: |
            conda config --set always_yes yes --set changeps1 no
            conda config --add channels conda-forge
            conda install python=$CONDA_PYTHON_VER
            conda install virtualenv
            conda install tox
      - run:
          name: Run the tests
          command: |
            conda env create -f environment-ros3.yml
            source activate ros3
            pip install -r requirements-dev.txt
            pip install -e .
            python test.py --ros3
      - run:
          name: Build wheel and source distribution
          command: |
            tox -e $BUILD_TOX_ENV
      - run:
          name: Test installation from a wheel
          command: |
            tox -e $TEST_WHEELINSTALL_ENV --recreate --installpkg dist/*-none-any.whl

  gallery37:
    <<: *py37
    environment:
      - TEST_TOX_ENV: "gallery-py37"
    <<: *gallery-steps

  gallery38:
    <<: *py38
    environment:
      - TEST_TOX_ENV: "gallery-py38"
    <<: *gallery-steps

  gallery39:
    <<: *py39
    environment:
      - TEST_TOX_ENV: "gallery-py39"
    <<: *gallery-steps

  gallery39-upgrade-dev:
    <<: *py39
    environment:
      - TEST_TOX_ENV: "gallery-py39-upgrade-dev"
    <<: *gallery-steps

  gallery39-upgrade-dev-pre:
    <<: *py39
    environment:
      - TEST_TOX_ENV: "gallery-py39-upgrade-dev-pre"
    <<: *gallery-steps

  gallery37-min-req:
    <<: *py37
    environment:
      - TEST_TOX_ENV: "gallery-py37-min-req"
    <<: *gallery-steps

  test-validation:
    <<: *py39
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - run:
          <<: *initialize-venv
      - run:
          name: Run the tests
          command: |
            . ../venv/bin/activate
            pip install tox
            tox -e validation-py39
          # Install is expected to be quick. Increase timeout in case there are some network issues.
          # While pip installing tox does not output by default. Circle thinks task is dead after 10 min.
          no_output_timeout: 30m

  deploy-dev:
    <<: *py39
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Publish wheel and source distribution as a GitHub pre-release
          command: |
            python -m venv ../venv
            . ../venv/bin/activate
            pip install -U scikit-ci-addons
            echo "CIRCLE_SHA1 [$CIRCLE_SHA1]"
            ci_addons publish_github_release NeurodataWithoutBorders/pynwb  \
                --prerelease-packages "dist/*" \
                --prerelease-sha $CIRCLE_SHA1 \
                --prerelease-packages-clear-pattern "*" \
                --prerelease-packages-keep-pattern "*dev<COMMIT_DISTANCE>*" \
                --re-upload \
                --exit-success-if-missing-token

  deploy-release:
    <<: *py39
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Deploy release
          command: |
            echo "Deploy release"
            python -m venv ../venv
            . ../venv/bin/activate
            pip install twine
            ls dist
            twine upload -u $PYPI_USER -p $PYPI_PASSWORD --skip-existing dist/*
      - run:
          name: Publish wheel and source distribution as a GitHub release
          command: |
            python -m venv ../venv
            . ../venv/bin/activate
            # use click<8 until https://github.com/j0057/github-release/issues/62 is resolved
            pip install "click<8" githubrelease
            githubrelease release $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME \
              create $CIRCLE_TAG --name $CIRCLE_TAG \
              --publish ./dist/*

workflows:
  version: 2
  test-package-publish:
    jobs:
      # - flake8:
      #     <<: *no_filters
      # - python37-min-req:
      #     <<: *no_filters
      # - python39:
      #     <<: *no_filters
      # - miniconda37:
      #     <<: *no_filters
      # - miniconda39:
      #     <<: *no_filters
      # - gallery37-min-req:
      #     <<: *no_filters
      # - gallery38:  # TODO replace with gallery39 after allensdk support py39
      #     <<: *no_filters
      - miniconda39-ros3:  # TODO add to other sections
          <<: *no_filters
      # - deploy-dev:
      #     requires:
      #       - flake8
      #       - python37-min-req
      #       - python39
      #       - miniconda37
      #       - miniconda39
      #       - gallery37-min-req
      #       - gallery38  # gallery39
      #     filters:
      #       tags:
      #         ignore:
      #           # exclude tags created by "ci_addons publish_github_release"
      #           - /^latest$/
      #           - /^latest-tmp$/
      #       branches:
      #         only: dev
      #     context:
      #       - docker-hub-creds
      # - deploy-release:
      #     requires:
      #       - flake8
      #       - python37-min-req
      #       - python39
      #       - miniconda37
      #       - miniconda39
      #       - gallery37-min-req
      #       - gallery38  # gallery39
      #     filters:
      #       tags:
      #         only: /^[0-9]+(\.[0-9]+)*(\.post[0-9]+)?$/
      #       branches:
      #         ignore: /.*/
      #     context:
      #       - docker-hub-creds

  nightly:
    triggers:
      - schedule:
          cron: "0 5 * * *"
          filters:
            branches:
              only: dev
    jobs:
      - flake8:
          <<: *no_filters
      - python37:
          <<: *no_filters
      - python37-min-req:
          <<: *no_filters
      - python38:
          <<: *no_filters
      - python39:
          <<: *no_filters
      - python39-upgrade-dev:
          <<: *no_filters
      - python39-upgrade-dev-pre:
          <<: *no_filters
      - miniconda37:
          <<: *no_filters
      - miniconda38:
          <<: *no_filters
      - miniconda39:
          <<: *no_filters
      - gallery37:
          <<: *no_filters
      - gallery37-min-req:
          <<: *no_filters
      - gallery38:
          <<: *no_filters
      - gallery39:
          <<: *no_filters
      - gallery39-upgrade-dev:
          <<: *no_filters
      - gallery39-upgrade-dev-pre:
          <<: *no_filters
