version: 2
jobs:
   build:
     docker:
       - image: ubuntu:xenial
     steps:
       - checkout
       - run:
           name: Install system requirements
           command: |
             apt-get update
             apt-get install -y software-properties-common python-software-properties git
       - run:
           name: Install python3.6 and pip
           command: |
             add-apt-repository ppa:jonathonf/python-3.6
             apt-get update
             apt-get install -y python-pip python3.6 python3-pip
       - run:
           name: Test flake8
           command: |
             pip install flake8
             flake8
       - run:
           name: Install tox
           command: |
             pip install tox
       - run:
           name: Run the tests for Python 2.7
           command: |
             tox -e py27
           # Install is expected to be quick. Increase timeout in case there are some network issues.
           # While pip installing tox does not output by default. Circle thinks task is dead after 10 min.
           no_output_timeout: 30m
       - run:
           name: Run the tests for Python 3.6
           command: |
             tox -e py36
           no_output_timeout: 30m
#       - run:
#           name: Report coverage
#           command: |
#             pip3 install -r requirements.txt
#             pip3 install -r requirements-dev.txt
#             pip3 install -e .
#             coverage run --source src test.py --pynwb
#             codecov -F pynwb
#             coverage run --source src test.py --integration
#             codecov -F integration
#             coverage run --source src test.py --form
#             codecov -F form
       - run:
           name: Test installation from a wheel for Python 2.7
           command: |
             tox -e py27 recreate --installpkg dist/*py2-none-any.whl
       - run:
           name: Test installation from a wheel for Python 3.6
           command: |
             tox -e py36 recreate --installpkg dist/*py3-none-any.whl
       - run:
           name: Publish wheel and source distribution on github
           command: |
             if [ "${CIRCLE_BRANCH}" == "dev" ]; then
               pip install -U scikit-ci-addons
               ci_addons publish_github_release NeurodataWithoutBorders/pynwb  \
                 --prerelease-packages "dist/*" \
                 --prerelease-sha dev \
                 --prerelease-packages-clear-pattern "*" \
                 --prerelease-packages-keep-pattern "*dev<COMMIT_DISTANCE>*" \
                 --re-upload \
                 --exit-success-if-missing-token
             fi
