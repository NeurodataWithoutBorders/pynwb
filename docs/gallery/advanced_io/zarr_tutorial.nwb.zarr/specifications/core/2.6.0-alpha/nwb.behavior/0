["{\"groups\":[{\"datasets\":[{\"shape\":[[null],[null,1],[null,2],[null,3]],\"dims\":[[\"num_times\"],[\"num_times\",\"x\"],[\"num_times\",\"x,y\"],[\"num_times\",\"x,y,z\"]],\"dtype\":\"numeric\",\"doc\":\"1-D or 2-D array storing position or direction relative to some reference frame.\",\"name\":\"data\",\"attributes\":[{\"doc\":\"Base unit of measurement for working with the data. The default value is 'meters'. Actual stored values are not necessarily stored in these units. To access the data in these units, multiply 'data' by 'conversion' and add 'offset'.\",\"name\":\"unit\",\"required\":false,\"dtype\":\"text\",\"default_value\":\"meters\"},{\"doc\":\"Scalar to multiply each element in data to convert it to the specified 'unit'. If the data are stored in acquisition system units or other units that require a conversion to be interpretable, multiply the data by 'conversion' to convert the data to the specified 'unit'. e.g. if the data acquisition system stores values in this object as signed 16-bit integers (int16 range -32,768 to 32,767) that correspond to a 5V range (-2.5V to 2.5V), and the data acquisition system gain is 8000X, then the 'conversion' multiplier to get from raw data acquisition values to recorded volts is 2.5/32768/8000 = 9.5367e-9.\",\"name\":\"conversion\",\"required\":false,\"dtype\":\"float32\",\"default_value\":1.0},{\"doc\":\"Scalar to add to the data after scaling by 'conversion' to finalize its coercion to the specified 'unit'. Two common examples of this include (a) data stored in an unsigned type that requires a shift after scaling to re-center the data, and (b) specialized recording devices that naturally cause a scalar offset with respect to the true units.\",\"name\":\"offset\",\"required\":false,\"dtype\":\"float32\",\"default_value\":0.0},{\"doc\":\"Smallest meaningful difference between values in data, stored in the specified by unit, e.g., the change in value of the least significant bit, or a larger number if signal noise is known to be present. If unknown, use -1.0.\",\"name\":\"resolution\",\"required\":false,\"dtype\":\"float32\",\"default_value\":-1.0},{\"doc\":\"Optionally describe the continuity of the data. Can be \\\"continuous\\\", \\\"instantaneous\\\", or \\\"step\\\". For example, a voltage trace would be \\\"continuous\\\", because samples are recorded from a continuous process. An array of lick times would be \\\"instantaneous\\\", because the data represents distinct moments in time. Times of image presentations would be \\\"step\\\" because the picture remains the same until the next timepoint. This field is optional, but is useful in providing information about the underlying data. It may inform the way this data is interpreted, the way it is visualized, and what analysis methods are applicable.\",\"name\":\"continuity\",\"required\":false,\"dtype\":\"text\"}]},{\"dtype\":\"text\",\"doc\":\"Description defining what exactly 'straight-ahead' means.\",\"name\":\"reference_frame\",\"quantity\":\"?\"}],\"doc\":\"Direction, e.g., of gaze or travel, or position. The TimeSeries::data field is a 2D array storing position or direction relative to some reference frame. Array structure: [num measurements] [num dimensions]. Each SpatialSeries has a text dataset reference_frame that indicates the zero-position, or the zero-axes for direction. For example, if representing gaze direction, 'straight-ahead' might be a specific pixel on the monitor, or some other point in space. For position data, the 0,0 point might be the top-left corner of an enclosure, as viewed from the tracking camera. The unit of data will indicate how to interpret SpatialSeries values.\",\"neurodata_type_inc\":\"TimeSeries\",\"neurodata_type_def\":\"SpatialSeries\"},{\"groups\":[{\"doc\":\"IntervalSeries object containing start and stop times of epochs.\",\"quantity\":\"*\",\"neurodata_type_inc\":\"IntervalSeries\"}],\"doc\":\"TimeSeries for storing behavioral epochs.  The objective of this and the other two Behavioral interfaces (e.g. BehavioralEvents and BehavioralTimeSeries) is to provide generic hooks for software tools/scripts. This allows a tool/script to take the output one specific interface (e.g., UnitTimes) and plot that data relative to another data modality (e.g., behavioral events) without having to define all possible modalities in advance. Declaring one of these interfaces means that one or more TimeSeries of the specified type is published. These TimeSeries should reside in a group having the same name as the interface. For example, if a BehavioralTimeSeries interface is declared, the module will have one or more TimeSeries defined in the module sub-group 'BehavioralTimeSeries'. BehavioralEpochs should use IntervalSeries. BehavioralEvents is used for irregular events. BehavioralTimeSeries is for continuous data.\",\"default_name\":\"BehavioralEpochs\",\"neurodata_type_inc\":\"NWBDataInterface\",\"neurodata_type_def\":\"BehavioralEpochs\"},{\"groups\":[{\"doc\":\"TimeSeries object containing behavioral events.\",\"quantity\":\"*\",\"neurodata_type_inc\":\"TimeSeries\"}],\"doc\":\"TimeSeries for storing behavioral events. See description of <a href=\\\"#BehavioralEpochs\\\">BehavioralEpochs</a> for more details.\",\"default_name\":\"BehavioralEvents\",\"neurodata_type_inc\":\"NWBDataInterface\",\"neurodata_type_def\":\"BehavioralEvents\"},{\"groups\":[{\"doc\":\"TimeSeries object containing continuous behavioral data.\",\"quantity\":\"*\",\"neurodata_type_inc\":\"TimeSeries\"}],\"doc\":\"TimeSeries for storing Behavoioral time series data. See description of <a href=\\\"#BehavioralEpochs\\\">BehavioralEpochs</a> for more details.\",\"default_name\":\"BehavioralTimeSeries\",\"neurodata_type_inc\":\"NWBDataInterface\",\"neurodata_type_def\":\"BehavioralTimeSeries\"},{\"groups\":[{\"doc\":\"TimeSeries object containing time series data on pupil size.\",\"quantity\":\"+\",\"neurodata_type_inc\":\"TimeSeries\"}],\"doc\":\"Eye-tracking data, representing pupil size.\",\"default_name\":\"PupilTracking\",\"neurodata_type_inc\":\"NWBDataInterface\",\"neurodata_type_def\":\"PupilTracking\"},{\"groups\":[{\"doc\":\"SpatialSeries object containing data measuring direction of gaze.\",\"quantity\":\"*\",\"neurodata_type_inc\":\"SpatialSeries\"}],\"doc\":\"Eye-tracking data, representing direction of gaze.\",\"default_name\":\"EyeTracking\",\"neurodata_type_inc\":\"NWBDataInterface\",\"neurodata_type_def\":\"EyeTracking\"},{\"groups\":[{\"doc\":\"SpatialSeries object containing direction of gaze travel.\",\"quantity\":\"*\",\"neurodata_type_inc\":\"SpatialSeries\"}],\"doc\":\"With a CompassDirection interface, a module publishes a SpatialSeries object representing a floating point value for theta. The SpatialSeries::reference_frame field should indicate what direction corresponds to 0 and which is the direction of rotation (this should be clockwise). The si_unit for the SpatialSeries should be radians or degrees.\",\"default_name\":\"CompassDirection\",\"neurodata_type_inc\":\"NWBDataInterface\",\"neurodata_type_def\":\"CompassDirection\"},{\"groups\":[{\"doc\":\"SpatialSeries object containing position data.\",\"quantity\":\"+\",\"neurodata_type_inc\":\"SpatialSeries\"}],\"doc\":\"Position data, whether along the x, x/y or x/y/z axis.\",\"default_name\":\"Position\",\"neurodata_type_inc\":\"NWBDataInterface\",\"neurodata_type_def\":\"Position\"}]}","|O",[1]]