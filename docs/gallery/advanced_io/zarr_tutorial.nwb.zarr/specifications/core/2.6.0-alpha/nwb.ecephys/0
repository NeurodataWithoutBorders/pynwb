["{\"groups\":[{\"datasets\":[{\"shape\":[[null],[null,null],[null,null,null]],\"dims\":[[\"num_times\"],[\"num_times\",\"num_channels\"],[\"num_times\",\"num_channels\",\"num_samples\"]],\"dtype\":\"numeric\",\"doc\":\"Recorded voltage data.\",\"name\":\"data\",\"attributes\":[{\"doc\":\"Base unit of measurement for working with the data. This value is fixed to 'volts'. Actual stored values are not necessarily stored in these units. To access the data in these units, multiply 'data' by 'conversion', followed by 'channel_conversion' (if present), and then add 'offset'.\",\"name\":\"unit\",\"dtype\":\"text\",\"value\":\"volts\"},{\"doc\":\"Scalar to multiply each element in data to convert it to the specified 'unit'. If the data are stored in acquisition system units or other units that require a conversion to be interpretable, multiply the data by 'conversion' to convert the data to the specified 'unit'. e.g. if the data acquisition system stores values in this object as signed 16-bit integers (int16 range -32,768 to 32,767) that correspond to a 5V range (-2.5V to 2.5V), and the data acquisition system gain is 8000X, then the 'conversion' multiplier to get from raw data acquisition values to recorded volts is 2.5/32768/8000 = 9.5367e-9.\",\"name\":\"conversion\",\"required\":false,\"dtype\":\"float32\",\"default_value\":1.0},{\"doc\":\"Scalar to add to the data after scaling by 'conversion' to finalize its coercion to the specified 'unit'. Two common examples of this include (a) data stored in an unsigned type that requires a shift after scaling to re-center the data, and (b) specialized recording devices that naturally cause a scalar offset with respect to the true units.\",\"name\":\"offset\",\"required\":false,\"dtype\":\"float32\",\"default_value\":0.0},{\"doc\":\"Smallest meaningful difference between values in data, stored in the specified by unit, e.g., the change in value of the least significant bit, or a larger number if signal noise is known to be present. If unknown, use -1.0.\",\"name\":\"resolution\",\"required\":false,\"dtype\":\"float32\",\"default_value\":-1.0},{\"doc\":\"Optionally describe the continuity of the data. Can be \\\"continuous\\\", \\\"instantaneous\\\", or \\\"step\\\". For example, a voltage trace would be \\\"continuous\\\", because samples are recorded from a continuous process. An array of lick times would be \\\"instantaneous\\\", because the data represents distinct moments in time. Times of image presentations would be \\\"step\\\" because the picture remains the same until the next timepoint. This field is optional, but is useful in providing information about the underlying data. It may inform the way this data is interpreted, the way it is visualized, and what analysis methods are applicable.\",\"name\":\"continuity\",\"required\":false,\"dtype\":\"text\"}]},{\"doc\":\"DynamicTableRegion pointer to the electrodes that this time series was generated from.\",\"name\":\"electrodes\",\"neurodata_type_inc\":\"DynamicTableRegion\"},{\"shape\":[null],\"dims\":[\"num_channels\"],\"dtype\":\"float32\",\"doc\":\"Channel-specific conversion factor. Multiply the data in the 'data' dataset by these values along the channel axis (as indicated by axis attribute) AND by the global conversion factor in the 'conversion' attribute of 'data' to get the data values in Volts, i.e, data in Volts = data * data.conversion * channel_conversion. This approach allows for both global and per-channel data conversion factors needed to support the storage of electrical recordings as native values generated by data acquisition systems. If this dataset is not present, then there is no channel-specific conversion factor, i.e. it is 1 for all channels.\",\"name\":\"channel_conversion\",\"quantity\":\"?\",\"attributes\":[{\"doc\":\"The zero-indexed axis of the 'data' dataset that the channel-specific conversion factor corresponds to. This value is fixed to 1.\",\"name\":\"axis\",\"dtype\":\"int32\",\"value\":1}]}],\"doc\":\"A time series of acquired voltage data from extracellular recordings. The data field is an int or float array storing data in volts. The first dimension should always represent time. The second dimension, if present, should represent channels.\",\"neurodata_type_inc\":\"TimeSeries\",\"neurodata_type_def\":\"ElectricalSeries\",\"attributes\":[{\"doc\":\"Filtering applied to all channels of the data. For example, if this ElectricalSeries represents high-pass-filtered data (also known as AP Band), then this value could be \\\"High-pass 4-pole Bessel filter at 500 Hz\\\". If this ElectricalSeries represents low-pass-filtered LFP data and the type of filter is unknown, then this value could be \\\"Low-pass filter at 300 Hz\\\". If a non-standard filter type is used, provide as much detail about the filter properties as possible.\",\"name\":\"filtering\",\"required\":false,\"dtype\":\"text\"}]},{\"datasets\":[{\"shape\":[[null,null],[null,null,null]],\"dims\":[[\"num_events\",\"num_samples\"],[\"num_events\",\"num_channels\",\"num_samples\"]],\"dtype\":\"numeric\",\"doc\":\"Spike waveforms.\",\"name\":\"data\",\"attributes\":[{\"doc\":\"Unit of measurement for waveforms, which is fixed to 'volts'.\",\"name\":\"unit\",\"dtype\":\"text\",\"value\":\"volts\"},{\"doc\":\"Scalar to multiply each element in data to convert it to the specified 'unit'. If the data are stored in acquisition system units or other units that require a conversion to be interpretable, multiply the data by 'conversion' to convert the data to the specified 'unit'. e.g. if the data acquisition system stores values in this object as signed 16-bit integers (int16 range -32,768 to 32,767) that correspond to a 5V range (-2.5V to 2.5V), and the data acquisition system gain is 8000X, then the 'conversion' multiplier to get from raw data acquisition values to recorded volts is 2.5/32768/8000 = 9.5367e-9.\",\"name\":\"conversion\",\"required\":false,\"dtype\":\"float32\",\"default_value\":1.0},{\"doc\":\"Scalar to add to the data after scaling by 'conversion' to finalize its coercion to the specified 'unit'. Two common examples of this include (a) data stored in an unsigned type that requires a shift after scaling to re-center the data, and (b) specialized recording devices that naturally cause a scalar offset with respect to the true units.\",\"name\":\"offset\",\"required\":false,\"dtype\":\"float32\",\"default_value\":0.0},{\"doc\":\"Smallest meaningful difference between values in data, stored in the specified by unit, e.g., the change in value of the least significant bit, or a larger number if signal noise is known to be present. If unknown, use -1.0.\",\"name\":\"resolution\",\"required\":false,\"dtype\":\"float32\",\"default_value\":-1.0},{\"doc\":\"Optionally describe the continuity of the data. Can be \\\"continuous\\\", \\\"instantaneous\\\", or \\\"step\\\". For example, a voltage trace would be \\\"continuous\\\", because samples are recorded from a continuous process. An array of lick times would be \\\"instantaneous\\\", because the data represents distinct moments in time. Times of image presentations would be \\\"step\\\" because the picture remains the same until the next timepoint. This field is optional, but is useful in providing information about the underlying data. It may inform the way this data is interpreted, the way it is visualized, and what analysis methods are applicable.\",\"name\":\"continuity\",\"required\":false,\"dtype\":\"text\"}]},{\"shape\":[null],\"dims\":[\"num_times\"],\"dtype\":\"float64\",\"doc\":\"Timestamps for samples stored in data, in seconds, relative to the common experiment master-clock stored in NWBFile.timestamps_reference_time. Timestamps are required for the events. Unlike for TimeSeries, timestamps are required for SpikeEventSeries and are thus re-specified here.\",\"name\":\"timestamps\",\"attributes\":[{\"doc\":\"Value is '1'\",\"name\":\"interval\",\"dtype\":\"int32\",\"value\":1},{\"doc\":\"Unit of measurement for timestamps, which is fixed to 'seconds'.\",\"name\":\"unit\",\"dtype\":\"text\",\"value\":\"seconds\"}]}],\"doc\":\"Stores snapshots/snippets of recorded spike events (i.e., threshold crossings). This may also be raw data, as reported by ephys hardware. If so, the TimeSeries::description field should describe how events were detected. All SpikeEventSeries should reside in a module (under EventWaveform interface) even if the spikes were reported and stored by hardware. All events span the same recording channels and store snapshots of equal duration. TimeSeries::data array structure: [num events] [num channels] [num samples] (or [num events] [num samples] for single electrode).\",\"neurodata_type_inc\":\"ElectricalSeries\",\"neurodata_type_def\":\"SpikeEventSeries\"},{\"datasets\":[{\"shape\":[null],\"dims\":[\"num_features\"],\"dtype\":\"text\",\"doc\":\"Description of features (eg, ''PC1'') for each of the extracted features.\",\"name\":\"description\"},{\"shape\":[null,null,null],\"dims\":[\"num_events\",\"num_channels\",\"num_features\"],\"dtype\":\"float32\",\"doc\":\"Multi-dimensional array of features extracted from each event.\",\"name\":\"features\"},{\"shape\":[null],\"dims\":[\"num_events\"],\"dtype\":\"float64\",\"doc\":\"Times of events that features correspond to (can be a link).\",\"name\":\"times\"},{\"doc\":\"DynamicTableRegion pointer to the electrodes that this time series was generated from.\",\"name\":\"electrodes\",\"neurodata_type_inc\":\"DynamicTableRegion\"}],\"doc\":\"Features, such as PC1 and PC2, that are extracted from signals stored in a SpikeEventSeries or other source.\",\"default_name\":\"FeatureExtraction\",\"neurodata_type_inc\":\"NWBDataInterface\",\"neurodata_type_def\":\"FeatureExtraction\"},{\"datasets\":[{\"dtype\":\"text\",\"doc\":\"Description of how events were detected, such as voltage threshold, or dV/dT threshold, as well as relevant values.\",\"name\":\"detection_method\"},{\"shape\":[null],\"dims\":[\"num_events\"],\"dtype\":\"int32\",\"doc\":\"Indices (zero-based) into source ElectricalSeries::data array corresponding to time of event. ''description'' should define what is meant by time of event (e.g., .25 ms before action potential peak, zero-crossing time, etc). The index points to each event from the raw data.\",\"name\":\"source_idx\"},{\"shape\":[null],\"dims\":[\"num_events\"],\"dtype\":\"float64\",\"doc\":\"Timestamps of events, in seconds.\",\"name\":\"times\",\"attributes\":[{\"doc\":\"Unit of measurement for event times, which is fixed to 'seconds'.\",\"name\":\"unit\",\"dtype\":\"text\",\"value\":\"seconds\"}]}],\"links\":[{\"doc\":\"Link to the ElectricalSeries that this data was calculated from. Metadata about electrodes and their position can be read from that ElectricalSeries so it's not necessary to include that information here.\",\"name\":\"source_electricalseries\",\"target_type\":\"ElectricalSeries\"}],\"doc\":\"Detected spike events from voltage trace(s).\",\"default_name\":\"EventDetection\",\"neurodata_type_inc\":\"NWBDataInterface\",\"neurodata_type_def\":\"EventDetection\"},{\"groups\":[{\"doc\":\"SpikeEventSeries object(s) containing detected spike event waveforms.\",\"quantity\":\"*\",\"neurodata_type_inc\":\"SpikeEventSeries\"}],\"doc\":\"Represents either the waveforms of detected events, as extracted from a raw data trace in /acquisition, or the event waveforms that were stored during experiment acquisition.\",\"default_name\":\"EventWaveform\",\"neurodata_type_inc\":\"NWBDataInterface\",\"neurodata_type_def\":\"EventWaveform\"},{\"groups\":[{\"doc\":\"ElectricalSeries object(s) containing filtered electrophysiology data.\",\"quantity\":\"+\",\"neurodata_type_inc\":\"ElectricalSeries\"}],\"doc\":\"Electrophysiology data from one or more channels that has been subjected to filtering. Examples of filtered data include Theta and Gamma (LFP has its own interface). FilteredEphys modules publish an ElectricalSeries for each filtered channel or set of channels. The name of each ElectricalSeries is arbitrary but should be informative. The source of the filtered data, whether this is from analysis of another time series or as acquired by hardware, should be noted in each's TimeSeries::description field. There is no assumed 1::1 correspondence between filtered ephys signals and electrodes, as a single signal can apply to many nearby electrodes, and one electrode may have different filtered (e.g., theta and/or gamma) signals represented. Filter properties should be noted in the ElectricalSeries 'filtering' attribute.\",\"default_name\":\"FilteredEphys\",\"neurodata_type_inc\":\"NWBDataInterface\",\"neurodata_type_def\":\"FilteredEphys\"},{\"groups\":[{\"doc\":\"ElectricalSeries object(s) containing LFP data for one or more channels.\",\"quantity\":\"+\",\"neurodata_type_inc\":\"ElectricalSeries\"}],\"doc\":\"LFP data from one or more channels. The electrode map in each published ElectricalSeries will identify which channels are providing LFP data. Filter properties should be noted in the ElectricalSeries 'filtering' attribute.\",\"default_name\":\"LFP\",\"neurodata_type_inc\":\"NWBDataInterface\",\"neurodata_type_def\":\"LFP\"},{\"datasets\":[{\"dtype\":[{\"doc\":\"x coordinate\",\"name\":\"x\",\"dtype\":\"float32\"},{\"doc\":\"y coordinate\",\"name\":\"y\",\"dtype\":\"float32\"},{\"doc\":\"z coordinate\",\"name\":\"z\",\"dtype\":\"float32\"}],\"doc\":\"stereotaxic or common framework coordinates\",\"name\":\"position\",\"quantity\":\"?\"}],\"links\":[{\"doc\":\"Link to the device that was used to record from this electrode group.\",\"name\":\"device\",\"target_type\":\"Device\"}],\"doc\":\"A physical grouping of electrodes, e.g. a shank of an array.\",\"neurodata_type_inc\":\"NWBContainer\",\"neurodata_type_def\":\"ElectrodeGroup\",\"attributes\":[{\"doc\":\"Description of this electrode group.\",\"name\":\"description\",\"dtype\":\"text\"},{\"doc\":\"Location of electrode group. Specify the area, layer, comments on estimation of area/layer, etc. Use standard atlas names for anatomical regions when possible.\",\"name\":\"location\",\"dtype\":\"text\"}]},{\"datasets\":[{\"dtype\":\"text\",\"doc\":\"Filtering applied to data before generating mean/sd\",\"name\":\"waveform_filtering\"},{\"shape\":[null,null],\"dims\":[\"num_clusters\",\"num_samples\"],\"dtype\":\"float32\",\"doc\":\"The mean waveform for each cluster, using the same indices for each wave as cluster numbers in the associated Clustering module (i.e, cluster 3 is in array slot [3]). Waveforms corresponding to gaps in cluster sequence should be empty (e.g., zero- filled)\",\"name\":\"waveform_mean\"},{\"shape\":[null,null],\"dims\":[\"num_clusters\",\"num_samples\"],\"dtype\":\"float32\",\"doc\":\"Stdev of waveforms for each cluster, using the same indices as in mean\",\"name\":\"waveform_sd\"}],\"links\":[{\"doc\":\"Link to Clustering interface that was the source of the clustered data\",\"name\":\"clustering_interface\",\"target_type\":\"Clustering\"}],\"doc\":\"DEPRECATED The mean waveform shape, including standard deviation, of the different clusters. Ideally, the waveform analysis should be performed on data that is only high-pass filtered. This is a separate module because it is expected to require updating. For example, IMEC probes may require different storage requirements to store/display mean waveforms, requiring a new interface or an extension of this one.\",\"default_name\":\"ClusterWaveforms\",\"neurodata_type_inc\":\"NWBDataInterface\",\"neurodata_type_def\":\"ClusterWaveforms\"},{\"datasets\":[{\"dtype\":\"text\",\"doc\":\"Description of clusters or clustering, (e.g. cluster 0 is noise, clusters curated using Klusters, etc)\",\"name\":\"description\"},{\"shape\":[null],\"dims\":[\"num_events\"],\"dtype\":\"int32\",\"doc\":\"Cluster number of each event\",\"name\":\"num\"},{\"shape\":[null],\"dims\":[\"num_clusters\"],\"dtype\":\"float32\",\"doc\":\"Maximum ratio of waveform peak to RMS on any channel in the cluster (provides a basic clustering metric).\",\"name\":\"peak_over_rms\"},{\"shape\":[null],\"dims\":[\"num_events\"],\"dtype\":\"float64\",\"doc\":\"Times of clustered events, in seconds. This may be a link to times field in associated FeatureExtraction module.\",\"name\":\"times\"}],\"doc\":\"DEPRECATED Clustered spike data, whether from automatic clustering tools (e.g., klustakwik) or as a result of manual sorting.\",\"default_name\":\"Clustering\",\"neurodata_type_inc\":\"NWBDataInterface\",\"neurodata_type_def\":\"Clustering\"}]}","|O",[1]]