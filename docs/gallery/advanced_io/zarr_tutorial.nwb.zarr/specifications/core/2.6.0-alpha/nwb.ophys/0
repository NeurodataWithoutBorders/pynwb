["{\"groups\":[{\"links\":[{\"doc\":\"Link to ImagingPlane object from which this TimeSeries data was generated.\",\"name\":\"imaging_plane\",\"target_type\":\"ImagingPlane\"}],\"doc\":\"Image stack recorded over time from 1-photon microscope.\",\"neurodata_type_inc\":\"ImageSeries\",\"neurodata_type_def\":\"OnePhotonSeries\",\"attributes\":[{\"doc\":\"Photomultiplier gain.\",\"name\":\"pmt_gain\",\"required\":false,\"dtype\":\"float32\"},{\"doc\":\"Lines imaged per second. This is also stored in /general/optophysiology but is kept here as it is useful information for analysis, and so good to be stored w/ the actual data.\",\"name\":\"scan_line_rate\",\"required\":false,\"dtype\":\"float32\"},{\"doc\":\"Exposure time of the sample; often the inverse of the frequency.\",\"name\":\"exposure_time\",\"required\":false,\"dtype\":\"float32\"},{\"doc\":\"Amount of pixels combined into 'bins'; could be 1, 2, 4, 8, etc.\",\"name\":\"binning\",\"required\":false,\"dtype\":\"uint8\"},{\"doc\":\"Power of the excitation in mW, if known.\",\"name\":\"power\",\"required\":false,\"dtype\":\"float32\"},{\"doc\":\"Intensity of the excitation in mW/mm^2, if known.\",\"name\":\"intensity\",\"required\":false,\"dtype\":\"float32\"}]},{\"datasets\":[{\"shape\":[[2],[3]],\"dims\":[[\"width|height\"],[\"width|height|depth\"]],\"dtype\":\"float32\",\"doc\":\"Width, height and depth of image, or imaged area, in meters.\",\"name\":\"field_of_view\",\"quantity\":\"?\"}],\"links\":[{\"doc\":\"Link to ImagingPlane object from which this TimeSeries data was generated.\",\"name\":\"imaging_plane\",\"target_type\":\"ImagingPlane\"}],\"doc\":\"Image stack recorded over time from 2-photon microscope.\",\"neurodata_type_inc\":\"ImageSeries\",\"neurodata_type_def\":\"TwoPhotonSeries\",\"attributes\":[{\"doc\":\"Photomultiplier gain.\",\"name\":\"pmt_gain\",\"required\":false,\"dtype\":\"float32\"},{\"doc\":\"Lines imaged per second. This is also stored in /general/optophysiology but is kept here as it is useful information for analysis, and so good to be stored w/ the actual data.\",\"name\":\"scan_line_rate\",\"required\":false,\"dtype\":\"float32\"}]},{\"datasets\":[{\"shape\":[[null],[null,null]],\"dims\":[[\"num_times\"],[\"num_times\",\"num_ROIs\"]],\"dtype\":\"numeric\",\"doc\":\"Signals from ROIs.\",\"name\":\"data\",\"attributes\":[{\"doc\":\"Scalar to multiply each element in data to convert it to the specified 'unit'. If the data are stored in acquisition system units or other units that require a conversion to be interpretable, multiply the data by 'conversion' to convert the data to the specified 'unit'. e.g. if the data acquisition system stores values in this object as signed 16-bit integers (int16 range -32,768 to 32,767) that correspond to a 5V range (-2.5V to 2.5V), and the data acquisition system gain is 8000X, then the 'conversion' multiplier to get from raw data acquisition values to recorded volts is 2.5/32768/8000 = 9.5367e-9.\",\"name\":\"conversion\",\"required\":false,\"dtype\":\"float32\",\"default_value\":1.0},{\"doc\":\"Scalar to add to the data after scaling by 'conversion' to finalize its coercion to the specified 'unit'. Two common examples of this include (a) data stored in an unsigned type that requires a shift after scaling to re-center the data, and (b) specialized recording devices that naturally cause a scalar offset with respect to the true units.\",\"name\":\"offset\",\"required\":false,\"dtype\":\"float32\",\"default_value\":0.0},{\"doc\":\"Smallest meaningful difference between values in data, stored in the specified by unit, e.g., the change in value of the least significant bit, or a larger number if signal noise is known to be present. If unknown, use -1.0.\",\"name\":\"resolution\",\"required\":false,\"dtype\":\"float32\",\"default_value\":-1.0},{\"doc\":\"Base unit of measurement for working with the data. Actual stored values are not necessarily stored in these units. To access the data in these units, multiply 'data' by 'conversion' and add 'offset'.\",\"name\":\"unit\",\"dtype\":\"text\"},{\"doc\":\"Optionally describe the continuity of the data. Can be \\\"continuous\\\", \\\"instantaneous\\\", or \\\"step\\\". For example, a voltage trace would be \\\"continuous\\\", because samples are recorded from a continuous process. An array of lick times would be \\\"instantaneous\\\", because the data represents distinct moments in time. Times of image presentations would be \\\"step\\\" because the picture remains the same until the next timepoint. This field is optional, but is useful in providing information about the underlying data. It may inform the way this data is interpreted, the way it is visualized, and what analysis methods are applicable.\",\"name\":\"continuity\",\"required\":false,\"dtype\":\"text\"}]},{\"doc\":\"DynamicTableRegion referencing into an ROITable containing information on the ROIs stored in this timeseries.\",\"name\":\"rois\",\"neurodata_type_inc\":\"DynamicTableRegion\"}],\"doc\":\"ROI responses over an imaging plane. The first dimension represents time. The second dimension, if present, represents ROIs.\",\"neurodata_type_inc\":\"TimeSeries\",\"neurodata_type_def\":\"RoiResponseSeries\"},{\"groups\":[{\"doc\":\"RoiResponseSeries object(s) containing dF/F for a ROI.\",\"quantity\":\"+\",\"neurodata_type_inc\":\"RoiResponseSeries\"}],\"doc\":\"dF/F information about a region of interest (ROI). Storage hierarchy of dF/F should be the same as for segmentation (i.e., same names for ROIs and for image planes).\",\"default_name\":\"DfOverF\",\"neurodata_type_inc\":\"NWBDataInterface\",\"neurodata_type_def\":\"DfOverF\"},{\"groups\":[{\"doc\":\"RoiResponseSeries object(s) containing fluorescence data for a ROI.\",\"quantity\":\"+\",\"neurodata_type_inc\":\"RoiResponseSeries\"}],\"doc\":\"Fluorescence information about a region of interest (ROI). Storage hierarchy of fluorescence should be the same as for segmentation (ie, same names for ROIs and for image planes).\",\"default_name\":\"Fluorescence\",\"neurodata_type_inc\":\"NWBDataInterface\",\"neurodata_type_def\":\"Fluorescence\"},{\"groups\":[{\"doc\":\"Results from image segmentation of a specific imaging plane.\",\"quantity\":\"+\",\"neurodata_type_inc\":\"PlaneSegmentation\"}],\"doc\":\"Stores pixels in an image that represent different regions of interest (ROIs) or masks. All segmentation for a given imaging plane is stored together, with storage for multiple imaging planes (masks) supported. Each ROI is stored in its own subgroup, with the ROI group containing both a 2D mask and a list of pixels that make up this mask. Segments can also be used for masking neuropil. If segmentation is allowed to change with time, a new imaging plane (or module) is required and ROI names should remain consistent between them.\",\"default_name\":\"ImageSegmentation\",\"neurodata_type_inc\":\"NWBDataInterface\",\"neurodata_type_def\":\"ImageSegmentation\"},{\"groups\":[{\"groups\":[{\"doc\":\"One or more image stacks that the masks apply to (can be one-element stack).\",\"quantity\":\"*\",\"neurodata_type_inc\":\"ImageSeries\"}],\"doc\":\"Image stacks that the segmentation masks apply to.\",\"name\":\"reference_images\"}],\"datasets\":[{\"shape\":[[null,null,null],[null,null,null,null]],\"dims\":[[\"num_roi\",\"num_x\",\"num_y\"],[\"num_roi\",\"num_x\",\"num_y\",\"num_z\"]],\"doc\":\"ROI masks for each ROI. Each image mask is the size of the original imaging plane (or volume) and members of the ROI are finite non-zero.\",\"name\":\"image_mask\",\"quantity\":\"?\",\"neurodata_type_inc\":\"VectorData\"},{\"doc\":\"Index into pixel_mask.\",\"name\":\"pixel_mask_index\",\"quantity\":\"?\",\"neurodata_type_inc\":\"VectorIndex\"},{\"dtype\":[{\"doc\":\"Pixel x-coordinate.\",\"name\":\"x\",\"dtype\":\"uint32\"},{\"doc\":\"Pixel y-coordinate.\",\"name\":\"y\",\"dtype\":\"uint32\"},{\"doc\":\"Weight of the pixel.\",\"name\":\"weight\",\"dtype\":\"float32\"}],\"doc\":\"Pixel masks for each ROI: a list of indices and weights for the ROI. Pixel masks are concatenated and parsing of this dataset is maintained by the PlaneSegmentation\",\"name\":\"pixel_mask\",\"quantity\":\"?\",\"neurodata_type_inc\":\"VectorData\"},{\"doc\":\"Index into voxel_mask.\",\"name\":\"voxel_mask_index\",\"quantity\":\"?\",\"neurodata_type_inc\":\"VectorIndex\"},{\"dtype\":[{\"doc\":\"Voxel x-coordinate.\",\"name\":\"x\",\"dtype\":\"uint32\"},{\"doc\":\"Voxel y-coordinate.\",\"name\":\"y\",\"dtype\":\"uint32\"},{\"doc\":\"Voxel z-coordinate.\",\"name\":\"z\",\"dtype\":\"uint32\"},{\"doc\":\"Weight of the voxel.\",\"name\":\"weight\",\"dtype\":\"float32\"}],\"doc\":\"Voxel masks for each ROI: a list of indices and weights for the ROI. Voxel masks are concatenated and parsing of this dataset is maintained by the PlaneSegmentation\",\"name\":\"voxel_mask\",\"quantity\":\"?\",\"neurodata_type_inc\":\"VectorData\"}],\"links\":[{\"doc\":\"Link to ImagingPlane object from which this data was generated.\",\"name\":\"imaging_plane\",\"target_type\":\"ImagingPlane\"}],\"doc\":\"Results from image segmentation of a specific imaging plane.\",\"neurodata_type_inc\":\"DynamicTable\",\"neurodata_type_def\":\"PlaneSegmentation\"},{\"groups\":[{\"doc\":\"An optical channel used to record from an imaging plane.\",\"quantity\":\"+\",\"neurodata_type_inc\":\"OpticalChannel\"}],\"datasets\":[{\"dtype\":\"text\",\"doc\":\"Description of the imaging plane.\",\"name\":\"description\",\"quantity\":\"?\"},{\"dtype\":\"float32\",\"doc\":\"Excitation wavelength, in nm.\",\"name\":\"excitation_lambda\"},{\"dtype\":\"float32\",\"doc\":\"Rate that images are acquired, in Hz. If the corresponding TimeSeries is present, the rate should be stored there instead.\",\"name\":\"imaging_rate\",\"quantity\":\"?\"},{\"dtype\":\"text\",\"doc\":\"Calcium indicator.\",\"name\":\"indicator\"},{\"dtype\":\"text\",\"doc\":\"Location of the imaging plane. Specify the area, layer, comments on estimation of area/layer, stereotaxic coordinates if in vivo, etc. Use standard atlas names for anatomical regions when possible.\",\"name\":\"location\"},{\"shape\":[[null,null,3],[null,null,null,3]],\"dims\":[[\"height\",\"width\",\"x, y, z\"],[\"height\",\"width\",\"depth\",\"x, y, z\"]],\"dtype\":\"float32\",\"doc\":\"DEPRECATED Physical position of each pixel. 'xyz' represents the position of the pixel relative to the defined coordinate space. Deprecated in favor of origin_coords and grid_spacing.\",\"name\":\"manifold\",\"quantity\":\"?\",\"attributes\":[{\"doc\":\"Scalar to multiply each element in data to convert it to the specified 'unit'. If the data are stored in acquisition system units or other units that require a conversion to be interpretable, multiply the data by 'conversion' to convert the data to the specified 'unit'. e.g. if the data acquisition system stores values in this object as pixels from x = -500 to 499, y = -500 to 499 that correspond to a 2 m x 2 m range, then the 'conversion' multiplier to get from raw data acquisition pixel units to meters is 2/1000.\",\"name\":\"conversion\",\"required\":false,\"dtype\":\"float32\",\"default_value\":1.0},{\"doc\":\"Base unit of measurement for working with the data. The default value is 'meters'.\",\"name\":\"unit\",\"required\":false,\"dtype\":\"text\",\"default_value\":\"meters\"}]},{\"shape\":[[2],[3]],\"dims\":[[\"x, y\"],[\"x, y, z\"]],\"dtype\":\"float32\",\"doc\":\"Physical location of the first element of the imaging plane (0, 0) for 2-D data or (0, 0, 0) for 3-D data. See also reference_frame for what the physical location is relative to (e.g., bregma).\",\"name\":\"origin_coords\",\"quantity\":\"?\",\"attributes\":[{\"doc\":\"Measurement units for origin_coords. The default value is 'meters'.\",\"name\":\"unit\",\"required\":false,\"dtype\":\"text\",\"default_value\":\"meters\"}]},{\"shape\":[[2],[3]],\"dims\":[[\"x, y\"],[\"x, y, z\"]],\"dtype\":\"float32\",\"doc\":\"Space between pixels in (x, y) or voxels in (x, y, z) directions, in the specified unit. Assumes imaging plane is a regular grid. See also reference_frame to interpret the grid.\",\"name\":\"grid_spacing\",\"quantity\":\"?\",\"attributes\":[{\"doc\":\"Measurement units for grid_spacing. The default value is 'meters'.\",\"name\":\"unit\",\"required\":false,\"dtype\":\"text\",\"default_value\":\"meters\"}]},{\"dtype\":\"text\",\"doc\":\"Describes reference frame of origin_coords and grid_spacing. For example, this can be a text description of the anatomical location and orientation of the grid defined by origin_coords and grid_spacing or the vectors needed to transform or rotate the grid to a common anatomical axis (e.g., AP/DV/ML). This field is necessary to interpret origin_coords and grid_spacing. If origin_coords and grid_spacing are not present, then this field is not required. For example, if the microscope takes 10 x 10 x 2 images, where the first value of the data matrix (index (0, 0, 0)) corresponds to (-1.2, -0.6, -2) mm relative to bregma, the spacing between pixels is 0.2 mm in x, 0.2 mm in y and 0.5 mm in z, and larger numbers in x means more anterior, larger numbers in y means more rightward, and larger numbers in z means more ventral, then enter the following -- origin_coords = (-1.2, -0.6, -2) grid_spacing = (0.2, 0.2, 0.5) reference_frame = \\\"Origin coordinates are relative to bregma. First dimension corresponds to anterior-posterior axis (larger index = more anterior). Second dimension corresponds to medial-lateral axis (larger index = more rightward). Third dimension corresponds to dorsal-ventral axis (larger index = more ventral).\\\"\",\"name\":\"reference_frame\",\"quantity\":\"?\"}],\"links\":[{\"doc\":\"Link to the Device object that was used to record from this electrode.\",\"name\":\"device\",\"target_type\":\"Device\"}],\"doc\":\"An imaging plane and its metadata.\",\"neurodata_type_inc\":\"NWBContainer\",\"neurodata_type_def\":\"ImagingPlane\"},{\"datasets\":[{\"dtype\":\"text\",\"doc\":\"Description or other notes about the channel.\",\"name\":\"description\"},{\"dtype\":\"float32\",\"doc\":\"Emission wavelength for channel, in nm.\",\"name\":\"emission_lambda\"}],\"doc\":\"An optical channel used to record from an imaging plane.\",\"neurodata_type_inc\":\"NWBContainer\",\"neurodata_type_def\":\"OpticalChannel\"},{\"groups\":[{\"doc\":\"Reuslts from motion correction of an image stack.\",\"quantity\":\"+\",\"neurodata_type_inc\":\"CorrectedImageStack\"}],\"doc\":\"An image stack where all frames are shifted (registered) to a common coordinate system, to account for movement and drift between frames. Note: each frame at each point in time is assumed to be 2-D (has only x & y dimensions).\",\"default_name\":\"MotionCorrection\",\"neurodata_type_inc\":\"NWBDataInterface\",\"neurodata_type_def\":\"MotionCorrection\"},{\"groups\":[{\"doc\":\"Image stack with frames shifted to the common coordinates.\",\"name\":\"corrected\",\"neurodata_type_inc\":\"ImageSeries\"},{\"doc\":\"Stores the x,y delta necessary to align each frame to the common coordinates, for example, to align each frame to a reference image.\",\"name\":\"xy_translation\",\"neurodata_type_inc\":\"TimeSeries\"}],\"links\":[{\"doc\":\"Link to ImageSeries object that is being registered.\",\"name\":\"original\",\"target_type\":\"ImageSeries\"}],\"doc\":\"Reuslts from motion correction of an image stack.\",\"neurodata_type_inc\":\"NWBDataInterface\",\"neurodata_type_def\":\"CorrectedImageStack\"}]}","|O",[1]]