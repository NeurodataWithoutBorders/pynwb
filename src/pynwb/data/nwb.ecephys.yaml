groups:
- neurodata_type_def: ElectricalSeries
  neurodata_type_inc: TimeSeries
  doc: 'Stores acquired voltage data from extracellular recordings. The data field
    of an ElectricalSeries is an int or float array storing data in Volts. TimeSeries::data
    array structure: :blue:`[num times] [num channels] (or [num_times] for single
    electrode).`'
  attributes:
  - name: help
    dtype: text
    value: Stores acquired voltage data from extracellular recordings
    doc: Value is 'Stores acquired voltage data from extracellular recordings'
  datasets:
  - name: data
    dtype: numeric
    dims:
    - - num_times
    - - num_times
      - num_channels
    - - num_times
      - num_channels
      - num_samples
    shape:
    - - null
    - - null
      - null
    - - null
      - null
      - null
    doc: Recorded voltage data.
    attributes:
    - name: unit
      dtype: text
      default_value: volt
      doc: "The base unit of measure used to store data. This should be in the SI\
        \ unit. COMMENT: This is the SI unit (when appropriate) of the stored data,\
        \ such as Volts. If the actual data is stored in millivolts, the field 'conversion'\
        \ below describes how to convert the data to the specified SI unit."
      required: false
  - name: electrodes
    neurodata_type_inc: DynamicTableRegion
    doc: the electrodes that this series was generated from

- neurodata_type_def: SpikeEventSeries
  neurodata_type_inc: ElectricalSeries
  doc: "Stores 'snapshots' of spike events (i.e., threshold crossings) in data. This\
    \ may also be raw data, as reported by ephys hardware. If so, the TimeSeries::description\
    \ field should describing how events were detected. All SpikeEventSeries should\
    \ reside in a module (under EventWaveform interface) even if the spikes were reported\
    \ and stored by hardware. All events span the same recording channels and store\
    \ snapshots of equal duration. TimeSeries::data array structure: [num events]\
    \ [num channels] [num samples] (or [num events] [num samples] for single electrode)."
  attributes:
  - name: help
    dtype: text
    value: Snapshots of spike events from data.
    doc: Value is 'Snapshots of spike events from data.'
  datasets:
  - name: data
    dtype: numeric
    dims:
    - - num_events
      - num_samples
    - - num_events
      - num_channels
      - num_samples
    shape:
    - - null
      - null
    - - null
      - null
      - null
    doc: Spike waveforms.
    attributes:
    - name: unit
      dtype: text
      default_value: volt
      doc: "The base unit of measure used to store data. This should be in the SI\
        \ unit. COMMENT: This is the SI unit (when appropriate) of the stored data,\
        \ such as Volts. If the actual data is stored in millivolts, the field 'conversion'\
        \ below describes how to convert the data to the specified SI unit."
      required: false
  - name: timestamps
    dtype: float64
    dims:
    - num_times
    shape:
    - null
    doc: 'Timestamps for samples stored in data.COMMENT: Timestamps here have all
      been corrected to the common experiment master-clock. Time is stored as seconds
      and all timestamps are relative to experiment start time. This is added here
      so that the timestamps is required for SpikeEventTimes.'
    attributes:
    - name: interval
      dtype: int32
      value: 1
      doc: Value is '1'
    - name: unit
      dtype: text
      value: Seconds
      doc: Value is 'Seconds'

- neurodata_type_def: ClusterWaveforms
  neurodata_type_inc: NWBDataInterface
  default_name: ClusterWaveforms
  doc: DEPRECATED The mean waveform shape, including standard deviation, of the different
    clusters. Ideally, the waveform analysis should be performed on data that is only
    high-pass filtered. This is a separate module because it is expected to require
    updating. For example, IMEC probes may require different storage requirements
    to store/display mean waveforms, requiring a new interface or an extension of
    this one.
  attributes:
  - name: help
    dtype: text
    value: DEPRECATED Mean waveform shape of clusters. Waveforms should be high-pass
      filtered (ie, not the same bandpass filter used waveform analysis and clustering)
    doc: Value is 'Mean waveform shape of clusters. Waveforms should be high-pass
      filtered (ie, not the same bandpass filter used waveform analysis and clustering)'
  datasets:
  - name: waveform_filtering
    dtype: text
    doc: Filtering applied to data before generating mean/sd
  - name: waveform_mean
    dtype: float32
    dims:
    - num_clusters
    - num_samples
    shape:
    - null
    - null
    doc: The mean waveform for each cluster, using the same indices for each wave
      as cluster numbers in the associated Clustering module (i.e, cluster 3 is in
      array slot [3]). Waveforms corresponding to gaps in cluster sequence should
      be empty (e.g., zero- filled)
  - name: waveform_sd
    dtype: float32
    dims:
    - num_clusters
    - num_samples
    shape:
    - null
    - null
    doc: Stdev of waveforms for each cluster, using the same indices as in mean
  links:
  - name: clustering_interface
    target_type: Clustering
    doc: HDF5 link to Clustering interface that was the source of the clustered data

- neurodata_type_def: Clustering
  neurodata_type_inc: NWBDataInterface
  default_name: Clustering
  doc: DEPRECATED Clustered spike data, whether from automatic clustering tools (e.g.,
    klustakwik) or as a result of manual sorting.
  attributes:
  - name: help
    dtype: text
    value: DEPRECATED Clustered spike data, whether from automatic clustering tools
      (eg, klustakwik) or as a result of manual sorting
    doc: Value is 'Clustered spike data, whether from automatic clustering tools (eg,
      klustakwik) or as a result of manual sorting'
  datasets:
  - name: description
    dtype: text
    doc: Description of clusters or clustering, (e.g. cluster 0 is noise, clusters
      curated using Klusters, etc)
  - name: num
    dtype: int32
    dims:
    - num_events
    shape:
    - null
    doc: Cluster number of each event
  - name: peak_over_rms
    dtype: float32
    dims:
    - num_clusters
    shape:
    - null
    doc: Maximum ratio of waveform peak to RMS on any channel in the cluster (provides
      a basic clustering metric).
  - name: times
    dtype: float64
    dims:
    - num_events
    shape:
    - null
    doc: Times of clustered events, in seconds. This may be a link to times field
      in associated FeatureExtraction module.

- neurodata_type_def: FeatureExtraction
  neurodata_type_inc: NWBDataInterface
  default_name: FeatureExtraction
  doc: Features, such as PC1 and PC2, that are extracted from signals stored in a
    SpikeEvent TimeSeries or other source.
  attributes:
  - name: help
    dtype: text
    value: Container for salient features of detected events
    doc: Value is 'Container for salient features of detected events'
  datasets:
  - name: description
    dtype: text
    dims:
    - num_features
    shape:
    - null
    doc: Description of features (eg, ''PC1'') for each of the extracted features.
  - name: features
    dtype: float32
    dims:
    - num_events
    - num_channels
    - num_features
    shape:
    - null
    - null
    - null
    doc: Multi-dimensional array of features extracted from each event.
  - name: times
    dtype: float64
    dims:
    - num_events
    shape:
    - null
    doc: Times of events that features correspond to (can be a link).
  - name: electrodes
    neurodata_type_inc: DynamicTableRegion
    doc: the electrodes that this series was generated from

- neurodata_type_def: EventDetection
  neurodata_type_inc: NWBDataInterface
  default_name: EventDetection
  doc: Detected spike events from voltage trace(s).
  attributes:
  - name: help
    dtype: text
    value: Detected spike events from voltage trace(s)
    doc: Value is 'Detected spike events from voltage trace(s)'
  datasets:
  - name: detection_method
    dtype: text
    doc: Description of how events were detected, such as voltage threshold, or dV/dT
      threshold, as well as relevant values.
  - name: source_idx
    dtype: int32
    dims:
    - num_events
    shape:
    - null
    doc: Indices (zero-based) into source ElectricalSeries::data array corresponding
      to time of event. Module description should define what is meant by time of
      event (e.g., .25msec before action potential peak, zero-crossing time, etc).
      The index points to each event from the raw data
  - name: times
    dtype: float64
    dims:
    - num_events
    shape:
    - null
    doc: Timestamps of events, in Seconds
    attributes:
    - name: unit
      dtype: text
      default_value: Seconds
      doc: The string ''Seconds''
      required: false
  links:
  - name: source_electricalseries
    target_type: ElectricalSeries
    doc: HDF5 link to ElectricalSeries that this data was calculated from. Metadata
      about electrodes and their position can be read from that ElectricalSeries so
      it's not necessary to mandate that information be stored here

- neurodata_type_def: EventWaveform
  neurodata_type_inc: NWBDataInterface
  default_name: EventWaveform
  doc: Represents either the waveforms of detected events, as extracted from a raw
    data trace in /acquisition, or the event waveforms that were stored during experiment
    acquisition.
  attributes:
  - name: help
    dtype: text
    value: Waveform of detected extracellularly recorded spike events
    doc: Value is 'Waveform of detected extracellularly recorded spike events'
  groups:
  - neurodata_type_inc: SpikeEventSeries
    doc: SpikeEventSeries object containing detected spike event waveforms
    quantity: '*'

- neurodata_type_def: FilteredEphys
  neurodata_type_inc: NWBDataInterface
  default_name: FilteredEphys
  doc: Ephys data from one or more channels that has been subjected to filtering.
    Examples of filtered data include Theta and Gamma (LFP has its own interface).
    FilteredEphys modules publish an ElectricalSeries for each filtered channel or
    set of channels. The name of each ElectricalSeries is arbitrary but should be
    informative. The source of the filtered data, whether this is from analysis of
    another time series or as acquired by hardware, should be noted in each's TimeSeries::description
    field. There is no assumed 1::1 correspondence between filtered ephys signals
    and electrodes, as a single signal can apply to many nearby electrodes, and one
    electrode may have different filtered (e.g., theta and/or gamma) signals represented.
  attributes:
  - name: help
    dtype: text
    value: Ephys data from one or more channels that is subjected to filtering, such
      as for gamma or theta oscillations (LFP has its own interface). Filter properties
      should be noted in the ElectricalSeries
    doc: Value is 'Ephys data from one or more channels that is subjected to filtering,
      such as for gamma or theta oscillations (LFP has its own interface). Filter
      properties should be noted in the ElectricalSeries'
  groups:
  - neurodata_type_inc: ElectricalSeries
    doc: ElectricalSeries object containing filtered electrophysiology data
    quantity: '+'

- neurodata_type_def: LFP
  neurodata_type_inc: NWBDataInterface
  default_name: LFP
  doc: LFP data from one or more channels. The electrode map in each published ElectricalSeries
    will identify which channels are providing LFP data. Filter properties should
    be noted in the ElectricalSeries description or comments field.
  attributes:
  - name: help
    dtype: text
    value: LFP data from one or more channels. Filter properties should be noted in
      the ElectricalSeries
    doc: Value is 'LFP data from one or more channels. Filter properties should be
      noted in the ElectricalSeries'
  groups:
  - neurodata_type_inc: ElectricalSeries
    doc: ElectricalSeries object containing LFP data for one or more channels
    quantity: '+'
    
- neurodata_type_def: ElectrodeGroup
  neurodata_type_inc: NWBContainer
  doc: One of possibly many groups, one for each electrode group.
  attributes:
  - name: help
    dtype: text
    value: A physical grouping of channels
    doc: Value is 'Metadata about a physical grouping of channels'
  - name: description
    dtype: text
    doc: description of this electrode group
  - name: location
    dtype: text
    doc: description of location of this electrode group
  links:
  - name: device
    target_type: Device
    doc: the device that was used to record from this electrode group
    quantity: '?'
