groups:
- attributes:
  - doc: Value is 'Storage object for time-series 2-D image data'
    dtype: text
    name: help
    value: Storage object for time-series 2-D image data
  datasets:
  - doc: Number of bit per image pixel.
    dtype: int32
    name: bits_per_pixel
    quantity: '?'
  - dims:
    - - x
      - y
    - - frame
      - y
      - x
    - - frame
      - z
      - y
      - x
    doc: Either binary data containing image or empty.
    dtype: int8
    name: data
    quantity: '?'
    shape:
    - - null
      - null
    - - null
      - null
      - null
    - - null
      - null
      - null
      - null
  - dims:
    - rank
    doc: Number of pixels on x, y, (and z) axes.
    dtype: int32
    name: dimension
    quantity: '?'
    shape:
    - null
  - attributes:
    - dims:
      - num_files
      doc: Each entry is the frame number (within the full ImageSeries) of the first
        frame in the corresponding external_file entry. This serves as an index to
        what frames each file contains, allowing random access.Zero-based indexing
        is used.  (The first element will always be zero).
      dtype: int
      name: starting_frame
      shape:
      - null
    dims:
    - num_files
    doc: 'Path or URL to one or more external file(s). Field only present if format=external.
      NOTE: this is only relevant if the image is stored in the file system as one
      or more image file(s). This field should NOT be used if the image is stored
      in another HDF5 file and that file is HDF5 linked to this file.'
    dtype: text
    name: external_file
    quantity: '?'
    shape:
    - null
  - doc: Format of image. If this is 'external' then the field external_file contains
      the path or URL information to that file. For tiff, png, jpg, etc, the binary
      representation of the image is stored in data. If the format is raw then the
      fields bit_per_pixel and dimension are used. For raw images, only a single channel
      is stored (eg, red).
    dtype: text
    name: format
    quantity: '?'
  doc: 'General image data that is common between acquisition and stimulus time series.
    Sometimes the image data is stored in the HDF5 file in a raw format while other
    times it will be stored as an external image file in the host file system. The
    data field will either be binary data or empty. TimeSeries::data array structure:
    [frame] [y][x] or [frame][z][y][x].'
  neurodata_type_def: ImageSeries
  neurodata_type_inc: TimeSeries
- attributes:
  - doc: Value is 'An alpha mask that is applied to a presented visual stimulus'
    dtype: text
    name: help
    value: An alpha mask that is applied to a presented visual stimulus
  doc: An alpha mask that is applied to a presented visual stimulus. The data[] array
    contains an array of mask values that are applied to the displayed image. Mask
    values are stored as RGBA. Mask can vary with time. The timestamps array indicates
    the starting time of a mask, and that mask pattern continues until it's explicitly
    changed.
  links:
  - doc: Link to ImageSeries that mask is applied to.
    name: masked_imageseries
    target_type: ImageSeries
  neurodata_type_def: ImageMaskSeries
  neurodata_type_inc: ImageSeries
- attributes:
  - doc: Value is 'Time-series image stack for optical recording or stimulus'
    dtype: text
    name: help
    value: Time-series image stack for optical recording or stimulus
  datasets:
  - doc: Distance from camera/monitor to target/eye.
    dtype: float32
    name: distance
    quantity: '?'
  - dims:
    - - width|height
      - width|height|depth
    doc: Width, height and depto of image, or imaged area (meters).
    dtype: float32
    name: field_of_view
    quantity: '?'
    shape:
    - 2
  - doc: Description of image relative to some reference frame (e.g., which way is
      up). Must also specify frame of reference.
    dtype: text
    name: orientation
    quantity: '?'
  doc: Image data that is presented or recorded. A stimulus template movie will be
    stored only as an image. When the image is presented as stimulus, additional data
    is required, such as field of view (eg, how much of the visual field the image
    covers, or how what is the area of the target being imaged). If the OpticalSeries
    represents acquired imaging data, orientation is also important.
  neurodata_type_def: OpticalSeries
  neurodata_type_inc: ImageSeries
- attributes:
  - doc: Value is 'A sequence that is generated from an existing image stack. Frames
      can be presented in an arbitrary order. The data[] field stores frame number
      in reference stack'
    dtype: text
    name: help
    value: A sequence that is generated from an existing image stack. Frames can be
      presented in an arbitrary order. The data[] field stores frame number in reference
      stack
  datasets:
  - dims:
    - num_times
    doc: Index of the frame in the referenced ImageSeries.
    dtype: int
    name: data
    shape:
    - null
  doc: Stores indices to image frames stored in an ImageSeries. The purpose of the
    ImageIndexSeries is to allow a static image stack to be stored somewhere, and
    the images in the stack to be referenced out-of-order. This can be for the display
    of individual images, or of movie segments (as a movie is simply a series of images).
    The data field stores the index of the frame in the referenced ImageSeries, and
    the timestamps array indicates when that image was displayed.
  links:
  - doc: HDF5 link to TimeSeries containing images that are indexed.
    name: indexed_timeseries
    target_type: ImageSeries
  neurodata_type_def: IndexSeries
  neurodata_type_inc: TimeSeries
