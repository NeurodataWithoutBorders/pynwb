datasets:
- neurodata_type_def: NWBData
  doc: 'The attributes specified here are included in all interfaces.'
  attributes:
  - name: help
    dtype: text
    doc: Short description of what this type of Interface contains.
- neurodata_type_def: Index
  neurodata_type_inc: NWBData
  doc: Pointers that index data values
  attributes:
  - name: help
    dtype: text
    doc: a help string
    value: indexes into a list of values for a list of elements
  - name: target
    dtype:
      target_type: NWBData
      reftype: object
    doc: the target dataset that this index applies to
- neurodata_type_def: VectorData
  neurodata_type_inc: NWBData
  doc: Data values indexed by pointer
  attributes:
  - name: help
    dtype: text
    doc: a help string
    value: Values for a list of elements
  - name: description
    dtype: text
    doc: A short description of what these vectors are
- neurodata_type_def: VectorIndex
  neurodata_type_inc: Index
  doc: Pointers that index data values
  attributes:
  - name: target
    dtype:
      target_type: VectorData
      reftype: object
    doc: the target dataset that this index applies to
- neurodata_type_def: ElementIdentifiers
  neurodata_type_inc: NWBData
  dtype: int
  doc: a unique identifier for each element
  attributes:
  - name: help
    dtype: text
    doc: a help string
    value: unique identifiers for a list of elements
  default_name: element_id
  shape:
  - null
- neurodata_type_def: DynamicTableRegion
  neurodata_type_inc: VectorData
  dtype: int
  doc: a region/index into a DynamicTable
  attributes:
  - name: help
    dtype: text
    doc: value is 'a subset (i.e. slice or region) of a DynamicTable'
    value: a subset (i.e. slice or region) of a DynamicTable
  - name: table
    dtype:
      target_type: DynamicTable
      reftype: object
    doc: a reference to the DynamicTable this region applies to
  - name: description
    dtype: text
    doc: Description of what this table region points to
- neurodata_type_def: Image
  neurodata_type_inc: NWBData
  doc: Image base type.
  attributes:
  - name: help
    dtype: text
    doc: base image (use GrayscaleImage, RGBImage, RGBAImage, etc.)
  - name: resolution
    dtype: float
    doc: pixels / cm
    required: False
  - name: description
    dtype: text
    required: False
    doc: description of image
  shape:
  - - null
    - null
  - - null
    - null
    - 3
  - - null
    - null
    - 4
groups:
- neurodata_type_def: NWBContainer
  doc: The attributes specified here are included in all interfaces.
  attributes:
  - name: help
    dtype: text
    doc: Short description of what this type of NWBContainer contains.
- neurodata_type_def: NWBDataInterface
  neurodata_type_inc: NWBContainer
  doc: An abstract data type for differentiating experimental data from metadata
- neurodata_type_def: TimeSeries
  neurodata_type_inc: NWBDataInterface
  doc: General purpose time series.
  attributes:
  - name: comments
    dtype: text
    doc: Human-readable comments about the TimeSeries. This second descriptive field
      can be used to store additional information, or descriptive information if the
      primary description field is populated with a computer-readable string.
    default_value: no comments
    required: false
  - name: description
    dtype: text
    doc: Description of TimeSeries
    default_value: no description
    required: false
  - name: help
    dtype: text
    doc: Value is 'General time series object'
    value: General time series object
  datasets:
  - name: control
    dtype: uint8
    doc: 'Numerical labels that apply to each element in data[]. COMMENT: Optional
      field. If present, the control array should have the same number of elements
      as data[].'
    dims:
    - num_times
    quantity: '?'
    shape:
    - null
  - name: control_description
    dtype: text
    doc: 'Description of each control value. COMMENT: Array length should be as long
      as the highest number in control minus one, generating an zero-based indexed
      array for control values.'
    dims:
    - num_control_values
    quantity: '?'
    shape:
    - null
  - name: data
    doc: 'Data values. Can also store binary data (eg, image frames) COMMENT: This
      field may be a link to data stored in an external file, especially in the case
      of raw data.'
    attributes:
    - name: conversion
      dtype: float32
      doc: Scalar to multiply each element in data to convert it to the specified
        unit
      default_value: 1.0
      required: false
    - name: resolution
      dtype: float32
      doc: 'Smallest meaningful difference between values in data, stored in the specified
        by unit. COMMENT: E.g., the change in value of the least significant bit,
        or a larger number if signal noise is known to be present. If unknown, use
        -1.0'
      default_value: 0.0
      required: false
    - name: unit
      dtype: text
      doc: 'The base unit of measure used to store data. This should be in the SI
        unit. COMMENT: This is the SI unit (when appropriate) of the stored data,
        such as Volts. If the actual data is stored in millivolts, the field ''conversion''
        below describes how to convert the data to the specified SI unit.'
    dims:
    - num_times
    shape:
    - null
  - name: starting_time
    dtype: float64
    doc: 'The timestamp of the first sample. COMMENT: When timestamps are uniformly
      spaced, the timestamp of the first sample can be specified and all subsequent
      ones calculated from the sampling rate.'
    attributes:
    - name: rate
      dtype: float32
      doc: 'Sampling rate, in Hz COMMENT: Rate information is stored in Hz'
    - name: unit
      dtype: text
      doc: Value is 'Seconds'
      value: Seconds
    quantity: '?'
  - name: timestamps
    dtype: float64
    doc: 'Timestamps for samples stored in data.COMMENT: Timestamps here have all
      been corrected to the common experiment master-clock. Time is stored as seconds
      and all timestamps are relative to experiment start time.'
    attributes:
    - name: interval
      dtype: int32
      doc: Value is '1'
      value: 1
    - name: unit
      dtype: text
      doc: Value is 'Seconds'
      value: Seconds
    dims:
    - num_times
    quantity: '?'
    shape:
    - null
  groups:
  - name: sync
    doc: 'Lab specific time and sync information as provided directly from hardware
      devices and that is necessary for aligning all acquired time information to
      a common timebase. The timestamp array stores time in the common timebase.
      COMMENT: This group will usually only be populated in TimeSeries that are
      stored external to the NWB file, in files storing raw data. Once timestamp
      data is calculated, the contents of ''sync'' are mostly for archival purposes.'
    quantity: '?'
- neurodata_type_def: ProcessingModule
  neurodata_type_inc: NWBContainer
  doc: Module.  Name should be descriptive. Stores a collection of related data organized
    by contained interfaces.  Each interface is a contract specifying content related
    to a particular type of data.
  attributes:
  - name: description
    dtype: text
    doc: Description of Module
  - name: help
    dtype: text
    doc: Value is 'A collection of analysis outputs from processing of data'
    value: A collection of analysis outputs from processing of data
  groups:
  - neurodata_type_inc: NWBDataInterface
    doc: Interface objects containing data output from processing steps
    quantity: '*'
- neurodata_type_def: Images
  neurodata_type_inc: NWBDataInterface
  doc: A NWBDataInterface for storing images that have some relationship
  attributes:
  - name: description
    dtype: text
    doc: Description of images in this container
  - name: help
    dtype: text
    doc: Value is 'A collection of images that have some meaningful relationship'
    value: A collection of images that have some meaningful relationship
  datasets:
  - neurodata_type_inc: Image
    doc: Images stored in this NWBDataInterface
    quantity: '+'
  default_name: Images
- neurodata_type_def: DynamicTable
  neurodata_type_inc: NWBDataInterface
  doc: A group containing multiple datasets that are aligned on the first dimension
    (Currently, this requirement if left up to APIs to check and enforce). Apart from
    a column that contains unique identifiers for each row there are no other required
    datasets. Users are free to add any number of VectorData objects here. Table
    functionality is already supported through compound types, which is analogous
    to storing an array-of-structs. DynamicTable can be thought of as a struct-of-arrays.
    This provides an alternative structure to choose from when optimizing storage
    for anticipated access patterns. Additionally, this type provides a way of creating
    a table without having to define a compound type up front. Although this convenience
    may be attractive, users should think carefully about how data will be accessed.
    DynamicTable is more appropriate for column-centric access, whereas a dataset
    with a compound type would be more appropriate for row-centric access. Finally,
    data size should also be taken into account. For small tables, performance loss
    may be an acceptable trade-off for the flexibility of a DynamicTable. For example,
    DynamicTable was originally developed for storing trial data and spike unit metadata.
    Both of these use cases are expected to produce relatively small tables, so the
    spatial locality of multiple datasets present in a DynamicTable is not expected
    to have a significant performance impact. Additionally, requirements of trial
    and unit metadata tables are sufficiently diverse that performance implications
    can be overlooked in favor of usability.
  attributes:
  - name: help
    dtype: text
    doc: Value is 'A column-centric table'
    value: A column-centric table
  - name: colnames
    dtype: text
    doc: The names of the columns in this table. This should be used to specifying
      an order to the columns
    shape:
    - null
  - name: description
    dtype: text
    doc: Description of what is in this dynamic table
  datasets:
  - neurodata_type_inc: ElementIdentifiers
    name: id
    dtype: int
    doc: The unique identifier for the rows in this dynamic table
    shape:
    - null
  - neurodata_type_inc: VectorData
    doc: The vector columns in this dynamic table
    quantity: '*'
  - neurodata_type_inc: VectorIndex
    doc: The indices for the vector columns in this dynamic table
    quantity: '*'
